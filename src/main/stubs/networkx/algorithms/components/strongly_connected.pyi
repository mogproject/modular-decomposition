from collections.abc import Generator
from typing import Any

def strongly_connected_components(G) -> Generator[Any, None, None]: ...
def kosaraju_strongly_connected_components(
    G, source: Any | None = ...
) -> Generator[Any, None, None]: ...
def strongly_connected_components_recursive(G) -> Generator[None, None, None]: ...
def number_strongly_connected_components(G): ...
def is_strongly_connected(G): ...
def condensation(G, scc: Any | None = ...): ...
