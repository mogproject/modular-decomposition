from collections.abc import Generator
from typing import Any

def single_source_shortest_path_length(G, source, cutoff: Any | None = ...): ...
def single_target_shortest_path_length(G, target, cutoff: Any | None = ...): ...
def all_pairs_shortest_path_length(
    G, cutoff: Any | None = ...
) -> Generator[Any, None, None]: ...
def bidirectional_shortest_path(G, source, target): ...
def single_source_shortest_path(G, source, cutoff: Any | None = ...): ...
def single_target_shortest_path(G, target, cutoff: Any | None = ...): ...
def all_pairs_shortest_path(
    G, cutoff: Any | None = ...
) -> Generator[Any, None, None]: ...
def predecessor(
    G,
    source,
    target: Any | None = ...,
    cutoff: Any | None = ...,
    return_seen: Any | None = ...,
): ...
